LIBRARY IEEE ;
USE IEEE.STD_LOGIC_1164.ALL ;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_unsigned.ALL;--因为使用到了从Integer类型转换到STD_LOGIC_VECTER
ENTITY LCDctrol IS 
	PORT  (
	CLKIN	:	in STD_LOGIC;	
	Din	: 	in STD_LOGIC_VECTOR(7 DOWNTO 0);	--毫秒数，距离数据
	DCLK	:	in STD_LOGIC;
	ext_rst_n :in STD_LOGIC;
	DATA	:	out STD_LOGIC_vector (15 DOWNTO 0);
	HSYNC :	out STD_LOGIC;
	lcd_light_en:	out STD_LOGIC;
	VSYNC	:	out STD_LOGIC);
END;

ARCHITECTURE	FH1	OF	LCDctrol IS
	SIGNAL Thsync:  INTEGER RANGE 0 TO 409;
	SIGNAL PHSYNC:	  STD_LOGIC;
	SIGNAL Tvsync:  INTEGER RANGE 0 TO 263;
	SIGNAL PVSYNC:	  STD_LOGIC;
	SIGNAL DATAAA:	  STD_LOGIC_vector (15 DOWNTO 0);
	SIGNAL m:  INTEGER RANGE 0 TO 319;
	TYPE MEM IS ARRAY ( NATURAL RANGE <> )	OF STD_LOGIC_VECTOR(7 DOWNTO 0);							--自定义存储器类型				
	SIGANL DATA:MEM(0 TO 319);											--使用这个类型，后面跟的范围是数据的多少，相当于数组的大小
	
	
	BEGIN
																
	
--GETDATA: PROCESS(CLKIN)
--	BEGIN
--		if CLKIN'event and CLKIN = '0' then 
--			if	m<319 then m<=m+1;
--			else m<=0;
--			end if;
--		DATA(m)<=Din;
--		end id;
--END PROCESS GETDATA;

	
	
DCLKCNT:	process(DCLK,ext_rst_n)												--行信号计数
		begin
			IF DCLK'EVENT AND DCLK = '0' THEN
				IF	  Thsync<408 THEN Thsync<=Thsync+1;
				ELSE Thsync<=0;
				END IF;	
				IF	Thsync<30 THEN PHSYNC<='0';--行同步信号
				ELSE					PHSYNC<='1';
				END IF;
			END IF;	
			IF	ext_rst_n = '0' THEN Thsync<=0;				--按下复位按键，确保同步
			END IF;
END PROCESS	DCLKCNT;			
			
			
			
TvsyncCNT:	process(PHSYNC,ext_rst_n)										--场信号计数
		begin
			IF PHSYNC'EVENT AND PHSYNC = '0' THEN
				IF	  Tvsync<262 THEN Tvsync<=Tvsync+1;
				ELSE Tvsync<=0;
				END IF;	
				IF	Tvsync<3  THEN PVSYNC<='0';--场同步信号
				ELSE					PVSYNC<='1';
				END IF;
			END IF;
			IF	ext_rst_n = '0' THEN Tvsync<=0;				--按下复位按键，确保同步
			END IF;

END PROCESS	TvsyncCNT;	
			

OUTDADA:	process(Thsync,Tvsync)	
		begin		
																	--数据信号
			
--			FOR Thsync IN 68 TO 388 LOOP
--				IF Tvsync == CONV_INTEGER(data(Thsync-68))	THEN
--						DATAAA<="1111100000000000";
--				ELSE 	DATAAA<="0000000000000000";
--				END IF;
--			END LOOP;													
																	
																
			
		end process OUTDADA;
		
		
		
		
		
		DATA<=DATAAA;
		HSYNC<=PHSYNC;
		VSYNC<=PVSYNC;
		lcd_light_en<='1';
	END;
		